# The travis/appveyor tokens for cancelbot to cancel builds on Travis/AppVeyor
# that don't need to be running.
[cancelbot]
azure-pipelines-token = "azure-pipelines"
azure-pipelines-2-token = "azure-pipelines2"

# Homu's GH access token to write comments and such, as well as an OAuth
# application to do things like rollups and synchronizations.
[homu.github]
access-token = "access"
app-client-id = "id"
app-client-secret = "secret"

# Homu's SSH key to do git operations
[homu.ssh]
ssh-key = "key"

# Shared webhook secrets for all homu's repos, probably generated with:
#
#   openssl rand -hex 40
[homu.repo-secrets]
rust = "sekrit"
cargo = "sekrit"
libc = "sekrit"
compiler-builtins = "sekrit"
regex = "sekrit"
stdarch = "sekrit"
chalk = "sekrit"

# Used to fetch a cert from letsencrypt
[nginx]
hostname = "buildbot.rust-lang.org"
hostname_alias = "bors.rust-lang.org"
email = "admin@rust-lang.org"

# Used to synchronize mailing lists
[mailgun]
token = "mailgun"

# Used to synchronize GitHub teams with the team repo.
[sync-github]
# The token needs the `admin:org` scope
token = "github"

# Distribution pieces used to configure releases.
[dist]

# File with the actual key as well as the path to a file with the password
gpg-key = "/data/gpg.key"
gpg-password-file = "/data/gpg.password"

# Remote HTTP host artifacts will be uploaded to. Note that this is *not* the
# same as what's configured in `config.toml` for rustbuild, it's just the *host*
# that we're uploading to and going to be looking at urls from.
#
# This is used in a number of places such as:
#
# * downloading manifests
# * urls in manifests
#
# and possibly more. Note that most urls end up appending `upload-dir` below to
# this address specified. This address should not have a trailing slash.
upload-addr = "https://static.rust-lang.org"

# The S3 bucket and directory that release artifacts will be uploaded to.
upload-bucket = "dev-static-rust-lang-org"
upload-bucket-region = "us-west-1"
upload-dir = "dist"

# Credentials for S3 downloads/uploads. As of this writing the credentials need
# to have permissions to:
#
# * upload/download/list to the `rust-lang-ci` bucket
# * upload/download/list to the bucket specified above
# * create a cloudfront invalidation of the id below
aws-access-key-id = "key"
aws-secret-key = "key"

# CloudFront distribution that we're going to be invalidating.
cloudfront-distribution-id = "id"
